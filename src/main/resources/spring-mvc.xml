<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 启用spring基于annotation的DI-->
	<context:annotation-config />
	
	<!--管理@Controller类型的bean-->
	<context:component-scan base-package="net.ssm.**.web.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 默认的注解驱动映射的支持 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 配置Fastjson支持 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="serializationInclusion">  
                            <value  
                                type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>  
                </property>  
				<property name="features">
					<list>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
			<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 静态资源访问-->
	<mvc:resources mapping="/static/**" location="/static/" />
	
	<!-- 配置SpringMVC的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/Views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 上传拦截，如最大上传值及最小上传值 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- maxUploadSize单位为byte,1kb=1024byte 1M=1024kb -->
		<!-- 指定所上传文件的总大小不能超过10M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="10485760" />
		<!--设置在文件上传时允许写到内存中的最大值 -->
		<property name="maxInMemorySize" value="4096" />
	</bean>
	
	<!--保证实现了Shiro内部lifecycle函数的bean执行 
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>	-->
	<!--开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>-->
</beans>